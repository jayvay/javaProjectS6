<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS6.dao.StoreDAO">
	<select id="getMajorCategorySearch" resultType="com.spring.javaProjectS6.vo.ProductVO">
		select * from majorCategory where majorCatCode = #{majorCatCode};
	</select>
	
	<select id="getSubCategorySearch" resultType="com.spring.javaProjectS6.vo.ProductVO">
		select sub.subCatName, major.majorCatName 
		from subCategory sub 
		join majorCategory major on sub.majorCatCode = major.majorCatCode
		order by subCatName;
	</select>
	
	<select id="getProductList" resultType="com.spring.javaProjectS6.vo.ProductVO">
		<if test='part == "전체"'>
	 		select * from product order by prodIdx desc;
	 	</if>
    <if test='part != "전체"'>
	 		select prod.*, sub.subCatName, major.majorCatName
			from product prod 
			join subCategory sub on substring(prod.prodCode,2,3)=sub.SubCatCode 
			join majorCategory major on prod.majorCatCode = major.majorCatCode
			order by prodIdx desc;
	 	</if>
	</select>
	
	<select id="getProductSearch" resultType="com.spring.javaProjectS6.vo.ProductVO">
		select prod.*, sub.subCatName 
		from product prod
		inner join subCategory sub on prod.subCatCode = sub.subCatCode
		where prod.prodIdx = #{prodIdx};
	</select>

	<select id="getProdOptionSearch" resultType="com.spring.javaProjectS6.vo.ProductVO">
		select * from prodOption where prodIdx = #{prodIdx} order by opIdx;
	</select>
	
	<select id="getCartList" resultType="com.spring.javaProjectS6.vo.CartVO">
		select cart.*, prod.prodName, prod.prodPrice, prod.prodFSName, op.opName, op.opPrice 
		from storeCart cart
		inner join product prod on cart.prodIdx = prod.prodIdx 
		inner join prodOption op on cart.opIdx = op.opIdx 
		where cart.mid = #{mid} order by cart.cIdx;
	</select>
	
	<select id="getCartSearch" resultType="com.spring.javaProjectS6.vo.CartVO">
		select * from storeCart where prodIdx = #{prodIdx} and opIdx = #{opIdx} and mid = #{mid} order by cIdx;
	</select>
	
	<select id="getOrderMaxIdx" resultType="com.spring.javaProjectS6.vo.OrderVO">
		select max(oIdx) as maxOIdx from storeOrder;
	</select>
	
	<select id="getCartIdxSearch" resultType="com.spring.javaProjectS6.vo.CartVO">
		select cart.*, prod.prodName, prod.prodPrice, prod.prodFSName, op.opName, op.opPrice 
		from storeCart cart
		inner join product prod on cart.prodIdx = prod.prodIdx 
		inner join prodOption op on cart.opIdx = op.opIdx 
		where cIdx = #{strCIdx};
	</select>
	
	<select id="getDeliveryIdxSearch" resultType="int">
		select dIdx from delivery where orderIdx = #{orderIdx} limit 1;
	</select>
	
	<select id="totRecCnt" resultType="int">
		<if test='mid == "전체"'>
			select count(*) from storeOrder where date(orderDate) = substring(now(), 1,10);
		</if>
		<if test='mid != "전체"'>
			select count(d.dIdx) from storeOrder o 
			join delivery d on o.orderIdx = d.orderIdx 
			where o.mid = #{mid} and date(o.orderDate) = substring(now(), 1,10);
		</if>
	</select>
	
	<update id="setCartUpdate">
		update storeCart set quantity = #{cartVO.quantity}, opTotalPrice = #{cartVO.opTotalPrice} 
		where prodIdx = #{cartVO.prodIdx} and opIdx = #{cartVO.opIdx} and mid = #{cartVO.mid}; 
	</update>
	
	<update id="setMemberPointPlus">
		update membership set point = point + #{savePoint} where mid = #{mid};
	</update>
	
	<insert id="setCartInput">
		insert into storeCart values (default, #{cartVO.mid}, #{cartVO.prodIdx}, #{cartVO.opIdx}, #{cartVO.quantity}, #{cartVO.opTotalPrice}, default);
	</insert>
	
	<insert id="setOrderInput">
		insert into storeOrder values (default, #{orderVO.orderIdx}, default, #{orderVO.mid}, #{orderVO.dIdx}, #{orderVO.prodIdx}, #{orderVO.opIdx}, #{orderVO.quantity}, #{orderVO.opTotalPrice}, #{orderVO.totalPrice}, #{orderVO.payPrice}, #{orderVO.usedPoint}, #{orderVO.payment}, default);
	</insert>
	
	<insert id="setDeliveryInput">
		insert into delivery values (default, #{deliveryVO.orderIdx}, #{deliveryVO.mid}, #{deliveryVO.name}, #{deliveryVO.tel}, #{deliveryVO.postcode}, #{deliveryVO.address}, #{deliveryVO.delivMsg}, default, default, default);
	</insert>
	
	
	
	<delete id="setCartDelete">
		delete from storeCart where cIdx = #{cIdx};
	</delete>
</mapper>